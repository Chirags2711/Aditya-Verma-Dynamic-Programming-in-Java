class Solution{
    public int cutRod(int price[], int n) {
        int cuts[] = new int[n];
        for(int i=0; i<n; i++){
            cuts[i] = i+1;
        }
        return knapSack(n, n, price, cuts);
    }
    int knapSack(int N, int W, int val[], int wt[])
    {
        int dp[][]=new int[N+1][W+1];
        for(int i=0; i<=N; i++){
            dp[i][0]=0;
        }
        for(int i=0; i<=W; i++){
            dp[0][i]=0;
        }
        for(int i=1; i<=N; i++){
            for(int j=1; j<=W; j++){
                int ans;
                if(wt[i-1]<=j){
                    ans = Math.max(dp[i-1][j], val[i-1] + dp[i][j-wt[i-1]]);
                }else{
                    ans = dp[i-1][j];
                }
                dp[i][j]=ans;
            }
        }
        return dp[N][W];
    }
}
