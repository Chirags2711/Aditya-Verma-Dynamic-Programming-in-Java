//Memoize and recursive solution may not exist if zeroes are allowed in array. If possible, it will be complicated.

class Solution{

	public int perfectSum(int arr[],int N, int sum) 
	{ 
	    int dp[][] = new int[N+1][sum+1];
	    dp[0][0] = 1;
	    int cnt = 1;
        for(int i=1; i<=N; i++)
        {
            if(arr[i-1]==0)
            {
                cnt*=2;
                dp[i][0]=cnt;
            }
            else
            {
                dp[i][0]=dp[i-1][0];
            }
            
        }
        for(int i=1; i<=sum; i++){
            dp[0][i] = 0;
        }
        for(int i=1; i<=N; i++){
            for(int j=1; j<=sum; j++){
                int ans;
                if(arr[i-1]<=j){
                    ans = dp[i-1][j] + dp[i-1][j-arr[i-1]];
                }else{
                    ans = dp[i-1][j];
                }
                dp[i][j] = ans%1000000007;
            }
        }
        return dp[N][sum];
	} 
}
