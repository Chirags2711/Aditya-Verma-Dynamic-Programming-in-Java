class Solution {
    public long count(int coins[], int N, int sum) {
        return knapSack(N, sum, coins);
    }
    long knapSack(int N, int W, int wt[]) //without val array, count num of ways
    {
        long dp[][]=new long[N+1][W+1];
        for(int i=0; i<=N; i++){
            dp[i][0]=1;
        }
        for(int i=1; i<=W; i++){
            dp[0][i]=0;
        }
        for(int i=1; i<=N; i++){
            for(int j=1; j<=W; j++){
                long ans;
                if(wt[i-1]<=j){
                    ans = dp[i-1][j] + dp[i][j-wt[i-1]];
                }else{
                    ans = dp[i-1][j];
                }
                dp[i][j]=ans;
            }
        }
        return dp[N][W];
    }
}
