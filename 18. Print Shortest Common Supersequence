//Variation of print LCS. Changes added.
class Solution {
    public String shortestCommonSupersequence(String s1, String s2) {
        int n = s1.length(), m = s2.length();
        int dp[][]=new int[n+1][m+1];
        for(int i=0; i<=n; i++){
            dp[i][0] = 0;
        }
        for(int i=0; i<=m; i++){
            dp[0][i] = 0;
        }
        for(int i=1; i<=n; i++){
            for(int j=1; j<=m; j++){
                int ans;
                if(s1.charAt(i-1)==s2.charAt(j-1)){
                    ans = 1 + dp[i-1][j-1];
                }else{
                    ans = Math.max(dp[i-1][j], dp[i][j-1]);
                }
                dp[i][j] = ans;
            }
        }
        String res = "";
        int i = n, j = m;
        while(i>0 && j>0){
            if(s1.charAt(i-1)==s2.charAt(j-1)){
                res=s1.charAt(i-1)+res;
                i--;
                j--;
            }else{
                if(dp[i-1][j] > dp[i][j-1]){
                    res=s1.charAt(i-1)+res; //added
                    i--;
                }else{
                    res=s2.charAt(j-1)+res; //added
                    j--;
                }
            }
        }
        while(i>0){ //added
            res=s1.charAt(i-1)+res;
            i--;
        }
        while(j>0){ //added
            res=s2.charAt(j-1)+res;
            j--;
        }
        return res;
    }
}
