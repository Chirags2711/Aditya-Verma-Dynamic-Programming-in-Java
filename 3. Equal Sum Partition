class Solution{
    static int equalPartition(int N, int arr[])
    {
        int sum = 0;
        for(int i=0; i<N; i++){
            sum+=arr[i];
        }
        if(sum%2==1) return 0;
        return isSubsetSum(N, arr, sum/2) ? 1 : 0;
    }
    static Boolean isSubsetSum(int N, int arr[], int sum){
        Boolean dp[][] = new Boolean[N+1][sum+1];
        for(int i=0; i<=N; i++){
            dp[i][0] = true;
        }
        for(int i=1; i<=sum; i++){
            dp[0][i] = false;
        }
        for(int i=1; i<=N; i++){
            for(int j=1; j<=sum; j++){
                Boolean ans;
                if(arr[i-1]<=j){
                    ans = dp[i-1][j] || dp[i-1][j-arr[i-1]];
                }else{
                    ans = dp[i-1][j];
                }
                dp[i][j] = ans;
            }
        }
        return dp[N][sum];
    }
}
